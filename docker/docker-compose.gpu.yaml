services:
  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.14
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ${NEEDLE_HOME:-.}/volumes/etcd:/etcd
    command: >
      etcd
      -advertise-client-urls=http://127.0.0.1:2379
      -listen-client-urls=http://0.0.0.0:2379
      --data-dir=/etcd
    healthcheck:
      test: [ "CMD", "etcdctl", "endpoint", "health" ]
      interval: 30s
      timeout: 20s
      retries: 3

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9001:9001"
      - "9000:9000"
    volumes:
      - ${NEEDLE_HOME:-.}/volumes/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

  standalone:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.5.4
    command: [ "milvus", "run", "standalone" ]
    security_opt:
      - seccomp:unconfined
    environment:
      MINIO_REGION: us-east-1
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - ${NEEDLE_HOME:-.}/volumes/milvus:/var/lib/milvus
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9091/healthz" ]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - etcd
      - minio

  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydb
    volumes:
      - ${NEEDLE_HOME:-.}/volumes/postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U myuser -d mydb" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  image-generator-hub:
    image: merfanian/image-generator-hub:latest
    container_name: image-generator-hub
    ports:
      - "8001:8000"

  backend:
    image: merfanian/needle:latest
    container_name: needle
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [ gpu ]
    depends_on:
      - postgres
      - standalone
      - image-generator-hub
    environment:
      POSTGRES__USER: myuser
      POSTGRES__PASSWORD: mypassword
      POSTGRES__DB: mydb
      POSTGRES__HOST: postgres
      POSTGRES__PORT: 5432
      MILVUS__HOST: standalone
      MILVUS__PORT: 19530
      SERVICE__USE_CUDA: true
      SERVICE__CONFIG_DIR_PATH: ${NEEDLE_HOME:-.}/configs/
      GENERATOR__HOST: image-generator-hub
      GENERATOR__PORT: 8000
    env_file:
      - ${NEEDLE_HOME:-.}/configs/directory.env
      - ${NEEDLE_HOME:-.}/configs/query.env
      - ${NEEDLE_HOME:-.}/configs/service.env
    volumes:
      - ${NEEDLE_HOME:-.}/volumes/.cache/:/root/.cache
      - ${HOME}:${HOME}:ro
    ports:
      - "8000:8000"
    command: [ "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000" ]

networks:
  default:
    name: needle
